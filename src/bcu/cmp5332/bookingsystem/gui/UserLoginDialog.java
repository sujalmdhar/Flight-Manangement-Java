package bcu.cmp5332.bookingsystem.gui;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

/**
 * The UserLoginDialog class represents a dialog window for user login.
 * It provides fields for entering email and phone number, and a login button.
 * This dialog is used to authenticate users in the flight booking system.
 * 
 * @author Sujal Manandhar
 */
public class UserLoginDialog extends JDialog implements ActionListener {

    private JLabel emailLabel;
    private JTextField emailField;
    private JLabel phoneNumberLabel;
    private JTextField phoneNumberField;
    private JButton loginButton;
    private boolean authenticated;

    /**
     * Constructs a UserLoginDialog with the specified parent frame.
     *
     * @param parent The parent JFrame from which this dialog is invoked.
     */
    public UserLoginDialog(JFrame parent) {
        super(parent, "User Login", true); // true for modal dialog
        setSize(300, 150);
        setLocationRelativeTo(parent);

        JPanel panel = new JPanel();
        panel.setLayout(new GridLayout(3, 2));

        emailLabel = new JLabel("Email:");
        emailField = new JTextField();
        phoneNumberLabel = new JLabel("Phone Number:");
        phoneNumberField = new JTextField();
        loginButton = new JButton("Login");

        panel.add(emailLabel);
        panel.add(emailField);
        panel.add(phoneNumberLabel);
        panel.add(phoneNumberField);
        panel.add(new JLabel()); // Placeholder for alignment
        panel.add(loginButton);

        loginButton.addActionListener(this);

        getContentPane().add(panel);
    }

    /**
     * Performs an action when a button is clicked in the dialog.
     *
     * @param e The ActionEvent generated by the user action.
     */
    @Override
    public void actionPerformed(ActionEvent e) {
        if (e.getSource() == loginButton) {
            // Perform authentication (in a real application, you would validate against database or model)
            String email = emailField.getText();
            String phoneNumber = phoneNumberField.getText();

            // For demo purposes, just check if fields are filled
            if (!email.isEmpty() && !phoneNumber.isEmpty()) {
                authenticated = true;
                dispose(); // Close the dialog
            } else {
                JOptionPane.showMessageDialog(this, "Please fill in all fields", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }

    /**
     * Checks if the user has been authenticated.
     *
     * @return true if the user is authenticated, false otherwise.
     */
    public boolean isAuthenticated() {
        return authenticated;
    }

    /**
     * Retrieves the email entered by the user.
     *
     * @return The email entered in the email field.
     */
    public String getEmail() {
        return emailField.getText();
    }

    /**
     * Retrieves the phone number entered by the user.
     *
     * @return The phone number entered in the phone number field.
     */
    public String getPhoneNumber() {
        return phoneNumberField.getText();
    }
}
